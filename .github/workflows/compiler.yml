name: Compile and Release

on: 
  release:
    types:
      - published

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include: 
        - os: macos-latest
          executable: chesscontributor-mac.zip
          filename: contributor.zip
        - os: windows-latest
          executable: chesscontributor-win.exe
          filename: dist/contributor.exe
        - os: ubuntu-latest
          executable: chesscontributor-linux.zip
          filename: contributor.zip
    env:
      chessPass: ${{ secrets.chessPass }}
      chessUser: ${{ secrets.chessUser }}
      chessToEmail: ${{ secrets.chessToEmail }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name : Print GitHub context
      env: 
        GITHUB_CONTEXT: ${{ toJson(github) }} 
      run: echo "$GITHUB_CONTEXT" 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    - name: Set password
      if: matrix.os != 'windows-latest'
      run: |
        printf "USERNAME='"$chessUser"'\nPASSWORD='"$chessPass"'\nTO_EMAIL='"$chessToEmail"'\n" > passw.py
    - name: Set password
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        python -c "import os;open(\"passw.py^\",'w').write('PASSWORD=\"'+os.environ['chessPass']+'\"\n"'+'USERNAME=\"'+os.environ['chessUser']+'\"\n'+'TO_EMAIL=\"'+os.environ['chessToEmail']+'\"')"
    - name: Compile
      run: |
        pyinstaller --onefile --noupx contributor/__main__.py
    - name: Rename file for Unix
      if: matrix.os != 'windows-latest'
      run: |
        mv dist/__main__ dist/contributor
    - name: Rename file for Windows
      if: matrix.os == 'windows-latest'
      run: |
        mv dist/__main__.exe dist/contributor.exe
    - name: Zip for Unix
      if: matrix.os != 'windows-latest'
      run: |
        zip -9 -r contributor.zip dist
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.filename }}
        asset_name: ${{ matrix.executable }}
        tag: ${{ github.ref }}
        overwrite: true
